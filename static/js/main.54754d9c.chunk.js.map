{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","listShift","step","props","frameSize","itemWidth","animationDuration","infinite","isPrevDisabled","isNextDisabled","this","buttonsSwitch","propsToStateUpdate","setState","images","length","shiftLimit","getShiftLimit","stepShift","getStepShift","prev","listStyles","transition","transform","imgStyles","width","wrapperStyles","className","type","onClick","prevBtnHandler","disabled","style","map","imgSrc","index","src","alt","String","nextBtnHandler","React","Component","App","userNumInputs","value","key","chooseStep","Object","keys","split","join","toUpperCase","name","defaultValue","onChange","event","numInputHandler","target","min","checkboxHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54754d9c.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  listShift: number,\n\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n\n  isPrevDisabled: boolean,\n  isNextDisabled: boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    listShift: 0,\n\n    step: this.props.step,\n    frameSize: this.props.frameSize,\n    itemWidth: this.props.itemWidth,\n    animationDuration: this.props.animationDuration,\n    infinite: this.props.infinite,\n\n    isPrevDisabled: false,\n    isNextDisabled: false,\n  };\n\n  componentDidMount() {\n    this.buttonsSwitch();\n  }\n\n  componentDidUpdate() {\n    this.propsToStateUpdate();\n\n    if (this.state.infinite) {\n      if (this.state.isNextDisabled || this.state.isPrevDisabled) {\n        this.setState({ isPrevDisabled: false, isNextDisabled: false });\n      }\n\n      return;\n    }\n\n    this.buttonsSwitch();\n  }\n\n  getShiftLimit() {\n    return (this.props.images.length - this.state.frameSize)\n       * this.state.itemWidth;\n  }\n\n  getStepShift() {\n    return this.state.step * this.state.itemWidth;\n  }\n\n  propsToStateUpdate() {\n    if (this.state.step !== this.props.step) {\n      this.setState({ step: this.props.step });\n\n      return;\n    }\n\n    if (this.state.frameSize !== this.props.frameSize) {\n      this.setState({ frameSize: this.props.frameSize });\n\n      return;\n    }\n\n    if (this.state.itemWidth !== this.props.itemWidth) {\n      this.setState({ itemWidth: this.props.itemWidth });\n\n      return;\n    }\n\n    if (this.state.animationDuration !== this.props.animationDuration) {\n      this.setState({ animationDuration: this.props.animationDuration });\n\n      return;\n    }\n\n    if (this.state.infinite !== this.props.infinite) {\n      this.setState({ infinite: this.props.infinite });\n    }\n  }\n\n  nextBtnHandler() {\n    const shiftLimit = this.getShiftLimit();\n\n    if (this.state.listShift < shiftLimit) {\n      let stepShift = this.getStepShift();\n\n      if ((this.state.listShift + stepShift) > shiftLimit) {\n        stepShift = shiftLimit - this.state.listShift;\n      }\n\n      this.setState(prev => ({\n        listShift: prev.listShift + stepShift,\n      }));\n\n      return;\n    }\n\n    if (this.state.infinite && this.state.listShift === shiftLimit) {\n      this.setState({ listShift: 0 });\n    }\n  }\n\n  prevBtnHandler() {\n    if (this.state.listShift > 0) {\n      let stepShift = this.getStepShift();\n\n      if ((this.state.listShift - stepShift) < 0) {\n        stepShift = this.state.listShift;\n      }\n\n      this.setState(prev => ({\n        listShift: prev.listShift - stepShift,\n      }));\n\n      return;\n    }\n\n    if (this.state.infinite && this.state.listShift === 0) {\n      this.setState({ listShift: this.getShiftLimit() });\n    }\n  }\n\n  buttonsSwitch() {\n    if (this.state.isPrevDisabled && this.state.listShift > 0) {\n      this.setState({ isPrevDisabled: false });\n\n      return;\n    }\n\n    if (this.state.listShift <= 0 && !this.state.isPrevDisabled) {\n      this.setState({ isPrevDisabled: true });\n\n      return;\n    }\n\n    const shiftLimit = this.getShiftLimit();\n\n    if (this.state.listShift >= shiftLimit && !this.state.isNextDisabled) {\n      this.setState({ isNextDisabled: true });\n\n      return;\n    }\n\n    if (this.state.isNextDisabled && this.state.listShift < shiftLimit) {\n      this.setState({ isNextDisabled: false });\n    }\n  }\n\n  render(): React.ReactNode {\n    const listStyles: React.CSSProperties = {\n      transition: `transform ${this.state.animationDuration}ms`,\n      transform: `translateX(-${this.state.listShift}px)`,\n    };\n\n    const imgStyles: React.CSSProperties = {\n      width: `${this.state.itemWidth}px`,\n    };\n\n    const wrapperStyles: React.CSSProperties = {\n      width: `${this.state.frameSize * this.state.itemWidth}px`,\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={() => (this.prevBtnHandler())}\n          disabled={this.state.isPrevDisabled}\n        >\n          ⬅️\n        </button>\n\n        <div\n          className=\"Carousel__wrapper\"\n          style={wrapperStyles}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={listStyles}\n          >\n            {this.props.images.map((imgSrc, index) => (\n              <li key={imgSrc}>\n                <img\n                  src={imgSrc}\n                  alt={String(index)}\n                  style={imgStyles}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={() => (this.nextBtnHandler())}\n          disabled={this.state.isNextDisabled}\n          data-cy=\"next\"\n        >\n          ➡️\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  userNumInputs: {\n    step: number,\n    frameSize: number,\n    itemWidth: number,\n    animationDuration: number,\n  },\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    userNumInputs: {\n      step: 3,\n      frameSize: 3,\n      itemWidth: 130,\n      animationDuration: 1000,\n    },\n    infinite: false,\n  };\n\n  numInputHandler(value: string, key: string) {\n    return this.setState((prev) => ({\n      userNumInputs: {\n        ...prev.userNumInputs,\n        [key]: +value,\n      },\n    }));\n  }\n\n  checkboxHandler() {\n    return this.setState(prev => ({ infinite: !prev.infinite }));\n  }\n\n  render() {\n    const {\n      images,\n      userNumInputs,\n      infinite,\n    } = this.state;\n\n    function chooseStep(key: string): number {\n      switch (key) {\n        case 'itemWidth':\n          return 10;\n        case 'animationDuration':\n          return 100;\n        default:\n          return 1;\n      }\n    }\n\n    return (\n      <div className=\"app\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"app__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={userNumInputs.step}\n          frameSize={userNumInputs.frameSize}\n          itemWidth={userNumInputs.itemWidth}\n          animationDuration={userNumInputs.animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"app__form\">\n          {(Object.keys(userNumInputs) as (keyof typeof userNumInputs)[])\n            .map(key => (\n              <label key={key}>\n                {`${key.split(/(?=[A-Z])/).join(' ').toUpperCase()}: `}\n                <input\n                  name=\"key\"\n                  type=\"number\"\n                  defaultValue={userNumInputs[key]}\n                  onChange={\n                    event => this.numInputHandler(event.target.value, key)\n                  }\n                  min={0}\n                  step={chooseStep(key)}\n                />\n              </label>\n            ))}\n\n          <label>\n            Infinite\n            <input\n              name=\"Infinite\"\n              type=\"checkbox\"\n              onChange={() => (this.checkboxHandler())}\n            />\n          </label>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}